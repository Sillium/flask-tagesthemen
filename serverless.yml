org: stoerk
app: sillium-apis
service: tagesthemen

frameworkVersion: '2'

custom:
  stage: ${opt:stage}
  dev: 
    domainName: tagesthemen.dev.sillium.org
  prod:
    domainName: tagesthemen.sillium.org
  wsgi:
    app: app.app
  customDomain:
    domainName: ${self:custom.${self:custom.stage}.domainName}
    basePath: ''
    autoDomain: true
    createRoute53Record: true
    hostedZoneId: ${param:hostedZoneId}
    certificateArn: ${param:certificateArn}
  apiGatewayCaching:
    enabled: true
    clusterSize: '0.5'
    ttlInSeconds: 3600
    dataEncrypted: false

provider:
  name: aws
  runtime: python3.8
  stage: ${self:custom.stage}
  lambdaHashingVersion: '20201221'
  memorySize: 128
  timeout: 5
  tracing:
    lambda: true

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /
          method: GET
          caching:
            enabled: true
      - http:
          path: /{proxy+}
          method: GET
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.proxy

  invalidate-cache:
    handler: invalidate-cache.run
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "apigateway:DELETE"
        Resource:
          - "*"
    environment:
      API_GATEWAY_ID: {Ref: ApiGatewayRestApi}
      STAGE: ${self:custom.stage}
    events:
      - schedule: cron(1 * ? 22-23 * *) # UTC, DST/no DST

plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-api-gateway-caching
  - serverless-iam-roles-per-function
